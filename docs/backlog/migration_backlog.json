{
  "version": 1,
  "generated_at": "2025-10-27T05:43:46.287385+00:00",
  "total_items": 5,
  "items": [
    {
      "id": "M2-001",
      "title": "Stabilise API documentation",
      "description": "Confirm detected endpoints and classify authentication requirements.",
      "estimate": 5,
      "dependencies": [],
      "components": [
        "api"
      ],
      "risk": {
        "severity": "high",
        "impact": "Incorrect endpoint catalogue may block client migrations.",
        "mitigation": "Review generated OpenAPI with engineering leads and add automated smoke tests."
      }
    },
    {
      "id": "M2-002",
      "title": "Template parity audit",
      "description": "Enumerate Twig templates and map them to new React views.",
      "estimate": 8,
      "dependencies": [
        "M2-001"
      ],
      "components": [
        "templates"
      ],
      "risk": {
        "severity": "medium",
        "impact": "Missing templates degrade UX during migration.",
        "mitigation": "Prioritise high-traffic templates and create acceptance criteria."
      }
    },
    {
      "id": "M2-003",
      "title": "Cron job remediation plan",
      "description": "Assess scheduled tasks and design equivalents for the asynchronous stack.",
      "estimate": 5,
      "dependencies": [],
      "components": [
        "cron",
        "operations"
      ],
      "risk": {
        "severity": "critical",
        "impact": "Unmigrated cron jobs can halt invoicing and notifications.",
        "mitigation": "Document ownership, add monitoring, and schedule reimplementation on FastAPI workers."
      }
    },
    {
      "id": "M2-004",
      "title": "Metrics coverage",
      "description": "Baseline key metrics (file counts, LOC, module sizes) for progress tracking.",
      "estimate": 3,
      "dependencies": [
        "M2-001"
      ],
      "components": [
        "metrics"
      ],
      "risk": {
        "severity": "low",
        "impact": "Lack of metrics limits visibility into migration progress.",
        "mitigation": "Integrate reports into CI dashboards and revisit quarterly."
      }
    },
    {
      "id": "M5-001",
      "stage": 5,
      "domain": "assets",
      "title": "Assets API read models",
      "description": "Expose read-only endpoints for inventory assets using FastAPI backed by the migrated PostgreSQL schema.",
      "estimate": 13,
      "dependencies": [
        "M3-001"
      ],
      "components": [
        "api",
        "assets"
      ],
      "risk": {
        "severity": "high",
        "impact": "Without an assets API the new frontend and integrations cannot access migrated inventory data.",
        "mitigation": "Implement feature flags, contract tests, and load testing before enabling clients."
      },
      "fastapi": {
        "feature_flag": "assets_api",
        "router_module": "app.api.routes.assets",
        "documentation": "docs/api/assets.md",
        "endpoints": [
          {
            "operation_id": "list_assets",
            "method": "GET",
            "path": "/assets",
            "summary": "List assets with pagination and optional free-text search."
          },
          {
            "operation_id": "get_asset",
            "method": "GET",
            "path": "/assets/{asset_id}",
            "summary": "Retrieve detailed information about a single asset by identifier."
          }
        ]
      },
      "schemas": {
        "module": "app.schemas.assets",
        "models": [
          "AssetSummary",
          "AssetDetails"
        ],
        "responses": [
          "AssetListResponse"
        ]
      },
      "loadtest": {
        "entrypoint": "backend/loadtests/main.js",
        "scenario": "assets_read"
      }
    }
  ]
}
